name: Xgtd

on: [push, pull_request]

jobs:
  xgtd:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Set mingw64 environment
      run:
        echo "MSYSTEM=CLANG64" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append ;
        echo "PATH=C:\msys64\clang64\bin;C:\msys64\usr\bin;$ENV:PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      if: startsWith(matrix.os, 'windows')

    - name: Set macOS environment
      run:
        echo "CMAKE_PREFIX_PATH=`brew --prefix openssl@1.1`" >> $GITHUB_ENV
      if: startsWith(matrix.os, 'macOS')

    - name: Set ubuntu environment
      run:
        echo "CMAKE_TOOLCHAIN_FILE=$PWD/.github/workflows/clang.toolchain.cmake" >> $GITHUB_ENV
      if: startsWith(matrix.os, 'ubuntu')

    - uses: actions/checkout@v2

    - name: Get current time
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Cache paths
      uses: actions/cache@v2
      with:
        path: |
          ~/.ccache
          ~/.cache/ccache
          ~/AppData/Roaming/ccache
          ~/Library/Caches/ccache
        key: ${{matrix.os}}-ccache-${{ steps.current-time.outputs.time }}
        restore-keys: |
          ${{matrix.os}}-ccache-

    - name: Install build dependencies (Ubuntu)
      run: sudo apt update && sudo apt install -y 
        cmake
        libssl-dev
        libtool
        python3-jinja2
        ccache
        libboost-all-dev
        build-essential
        clang
        ninja-build
      if: startsWith(matrix.os, 'ubuntu')
    - name: Install build dependencies (macOS)
      run: brew install
        cmake
        boost
        libtool
        openssl@1.1
        ccache
        python3
        ninja && python3 -m pip install jinja2
      if: startsWith(matrix.os, 'macOS')
    - name: Install build dependencies (mingw64)
      run: pacman --noconfirm -S
        mingw-w64-clang-x86_64-binutils
        mingw-w64-clang-x86_64-boost
        mingw-w64-clang-x86_64-ccache
        mingw-w64-clang-x86_64-gcc
        mingw-w64-clang-x86_64-cmake
        mingw-w64-clang-x86_64-ninja
        mingw-w64-clang-x86_64-openssl
        mingw-w64-clang-x86_64-python-jinja2-time
        mingw-w64-clang-x86_64-winpthreads
      if: startsWith(matrix.os, 'windows')

    - name: Configure cmake
      run: cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_MIRA=ON -G Ninja -B build -S .
    - name: Build xgtd
      run: ninja -C build xgtd

    - uses: actions/upload-artifact@v3
      with:
        name: xgtd
        path: build/programs/xgtd/xgtd*